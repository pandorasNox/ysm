---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: glue
  annotations:
    ingress.kubernetes.io/proxy-body-size: 20m
    kubernetes.io/ingress.class: "nginx"
    # !!! no basic auth on purpose !!!
    # endpoints are guarded by glue's oauth
spec:
  tls:
    - hosts:
        - ${STORE_DE_GLUE_DOMAIN}
        - ${STORE_AT_GLUE_DOMAIN}
        - ${STORE_US_GLUE_DOMAIN}
      secretName: spryker-demo-tls
  rules:
    - host: ${STORE_DE_GLUE_DOMAIN}
      http:
        paths:
          - path: /
            backend:
              serviceName: de-glue
              servicePort: 80
    - host: ${STORE_AT_GLUE_DOMAIN}
      http:
        paths:
        - path: /
          backend:
            serviceName: at-glue
            servicePort: 80
    - host: ${STORE_US_GLUE_DOMAIN}
      http:
        paths:
        - path: /
          backend:
            serviceName: us-glue
            servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: yves
  annotations:
    ingress.kubernetes.io/proxy-body-size: 20m
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
spec:
  tls:
  - hosts:
    - ${STORE_DE_YVES_DOMAIN}
    - ${STORE_AT_YVES_DOMAIN}
    - ${STORE_US_YVES_DOMAIN}
    secretName: spryker-demo-tls
  rules:
    - host: ${STORE_DE_YVES_DOMAIN}
      http:
        paths:
        - path: /
          backend:
            serviceName: de-yves
            servicePort: 80
    - host: ${STORE_AT_YVES_DOMAIN}
      http:
        paths:
        - path: /
          backend:
            serviceName: at-yves
            servicePort: 80
    - host: ${STORE_US_YVES_DOMAIN}
      http:
        paths:
        - path: /
          backend:
            serviceName: us-yves
            servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: zed
  annotations:
    ingress.kubernetes.io/proxy-body-size: 20m
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
spec:
  tls:
  - hosts:
    - ${STORE_DE_ZED_DOMAIN}
    - ${STORE_AT_ZED_DOMAIN}
    - ${STORE_US_ZED_DOMAIN}
    secretName: spryker-demo-tls
  rules:
    - host: ${STORE_DE_ZED_DOMAIN}
      http:
        paths:
        - path: /
          backend:
            serviceName: de-zed
            servicePort: 80
    - host: ${STORE_AT_ZED_DOMAIN}
      http:
        paths:
        - path: /
          backend:
            serviceName: at-zed
            servicePort: 80
    - host: ${STORE_US_ZED_DOMAIN}
      http:
        paths:
        - path: /
          backend:
            serviceName: us-zed
            servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: entrance
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
spec:
  tls:
  - hosts:
    - ${ENTRANCE_DOMAIN}
    secretName: spryker-demo-tls
  rules:
    - host: ${ENTRANCE_DOMAIN}
      http:
        paths:
        - path: /
          backend:
            serviceName: entrance
            servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: mailcatcher
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
spec:
  tls:
  - hosts:
    - ${MAILCATCHER_DOMAIN}
    secretName: spryker-demo-tls
  rules:
    - host: ${MAILCATCHER_DOMAIN}
      http:
        paths:
        - path: /
          backend:
            serviceName: mail
            servicePort: 80
